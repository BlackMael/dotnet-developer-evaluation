// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi.WithIdXml;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi
{
    /// <summary>
    /// Builds and executes requests for operations under \xml-api
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class XmlApiRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi.XmlApiRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public XmlApiRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/xml-api", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi.XmlApiRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public XmlApiRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/xml-api", rawUrl)
        {
        }
        /// <summary>
        /// Builds and executes requests for operations under \xml-api\{id}.xml
        /// </summary>
        /// <returns>A <see cref="global::OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi.WithIdXml.WithIdXmlRequestBuilder"/></returns>
        /// <param name="id">Company ID</param>
        public virtual global::OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi.WithIdXml.WithIdXmlRequestBuilder WithIdXml(double? id)
        {
            _ = id ?? throw new ArgumentNullException(nameof(id));
            return new global::OpenPoly.Core.ClientAPI.OpenApiXML.XmlApi.WithIdXml.WithIdXmlRequestBuilder(PathParameters, RequestAdapter, id);
        }
    }
}
